diff -urN breaker3264_a2/main.c breaker3264_b2/main.c
--- breaker3264_a2/main.c	2014-08-23 20:23:51.000000000 +0200
+++ breaker3264_b2/main.c	2014-08-25 17:57:10.291666790 +0200
@@ -17,7 +17,7 @@
 
 
 #include "includes.h"
-
+#include "pathconfig.h"
 
 // Variables générales.
 struct SGene gVar;
@@ -244,136 +244,140 @@
 	u32	i;
 
 	assert(MstCheckStructSizes() == 0);		// Debug : Vérifie la taille des structures spécifiques des monstres.
-
-	// SDL Init.
-	if (SDL_Init(SDL_INIT_VIDEO) < 0) {
-		fprintf(stderr, "Unable to init SDL: %s\n", SDL_GetError());
-		exit(1);
-	}
-	// atexit : Quand on quittera (exit, return...), SDL_Quit() sera appelée.
-	atexit(SDL_Quit);
-
-	// Video mode init.
-	Render_InitVideo();
-	SDL_WM_SetCaption("Arkanoid by 17o2!!", NULL);	// Nom de la fenêtre.
-	gRender.nRenderMode = e_RenderMode_Scale2x;
-	Render_SetVideoMode();
-
-	gVar.pKeys = SDL_GetKeyState(NULL);		// Init ptr kb.
-
-	// Preca Sinus et Cosinus.
-	PrecaSinCos();
-
-	// Load sprites.
-	SprInitEngine();
-	#ifndef _WIN32
-	SprLoadBMP(BREAKER_DATADIR"/gfx/bricks.bmp", gVar.pSprColors, SPR_Palette_Idx);
-	SprLoadBMP(BREAKER_DATADIR"/gfx/font_small.bmp", NULL, 0);
-	#else
-	SprLoadBMP("gfx/bricks.bmp", gVar.pSprColors, SPR_Palette_Idx);
-	SprLoadBMP("gfx/font_small.bmp", NULL, 0);
-	#endif
-
-	// Load levels backgound pictures.
-	#ifndef _WIN32
-	char	*pBkgLevFilenames[GFX_NbBkg] = { 
-		BREAKER_DATADIR"/gfx/lev1.bmp",
-		BREAKER_DATADIR"/gfx/lev2.bmp",
-		BREAKER_DATADIR"/gfx/lev3.bmp",
-		BREAKER_DATADIR"/gfx/lev4.bmp",
-		BREAKER_DATADIR"/gfx/levdoh.bmp"
-	};
-	#else
-	char	*pBkgLevFilenames[GFX_NbBkg] = { "gfx/lev1.bmp", "gfx/lev2.bmp", "gfx/lev3.bmp", "gfx/lev4.bmp", "gfx/levdoh.bmp" };
-	#endif
-	for (i = 0; i < GFX_NbBkg; i++)
+	if (set_breaker_dir())
 	{
-		if ((gVar.pLev[i] = SDL_LoadBMP(pBkgLevFilenames[i])) == NULL) {
-			fprintf(stderr, "Couldn't load picture '%s' : %s\n", pBkgLevFilenames[i], SDL_GetError());
+		// SDL Init.
+		if (SDL_Init(SDL_INIT_VIDEO) < 0) {
+		fprintf(stderr, "Unable to init SDL: %s\n", SDL_GetError());
 			exit(1);
 		}
-	}
-	gVar.pLevel = gVar.pLev[0];
+		// atexit : Quand on quittera (exit, return...), SDL_Quit() sera appelée.
+		atexit(SDL_Quit);
 
-	// Load menus backgound pictures.
-	#ifndef _WIN32
-	char	*pBkgMenFilenames[MENU_NbBkg] = {
-		BREAKER_DATADIR"/gfx/bkg1.bmp",
-		BREAKER_DATADIR"/gfx/bkg2.bmp"
-	};
-	#else
-	char	*pBkgMenFilenames[MENU_NbBkg] = { "gfx/bkg1.bmp", "gfx/bkg2.bmp" };
-	#endif
-	for (i = 0; i < MENU_NbBkg; i++)
-	{
-		if ((gVar.pBkg[i] = SDL_LoadBMP(pBkgMenFilenames[i])) == NULL) {
-			fprintf(stderr, "Couldn't load picture '%s' : %s\n", pBkgMenFilenames[i], SDL_GetError());
-			exit(1);
+		// Video mode init.
+		Render_InitVideo();
+		SDL_WM_SetCaption("Arkanoid by 17o2!!", NULL);	// Nom de la fenêtre.
+		gRender.nRenderMode = e_RenderMode_Scale2x;
+		Render_SetVideoMode();
+
+		gVar.pKeys = SDL_GetKeyState(NULL);		// Init ptr kb.
+
+		// Preca Sinus et Cosinus.
+		PrecaSinCos();
+
+		// Load sprites.
+		SprInitEngine();
+		#ifndef _WIN32
+		SprLoadBMP(BREAKER_DATADIR"/gfx/bricks.bmp", gVar.pSprColors, SPR_Palette_Idx);
+		SprLoadBMP(BREAKER_DATADIR"/gfx/font_small.bmp", NULL, 0);
+		#else
+		SprLoadBMP("gfx/bricks.bmp", gVar.pSprColors, SPR_Palette_Idx);
+		SprLoadBMP("gfx/font_small.bmp", NULL, 0);
+		#endif
+						
+		// Load levels backgound pictures.
+		#ifndef _WIN32
+		char	*pBkgLevFilenames[GFX_NbBkg] = { 
+			BREAKER_DATADIR"/gfx/lev1.bmp",
+			BREAKER_DATADIR"/gfx/lev2.bmp",
+			BREAKER_DATADIR"/gfx/lev3.bmp",
+			BREAKER_DATADIR"/gfx/lev4.bmp",
+			BREAKER_DATADIR"/gfx/levdoh.bmp"
+		};
+		#else
+		char	*pBkgLevFilenames[GFX_NbBkg] = { "gfx/lev1.bmp", "gfx/lev2.bmp", "gfx/lev3.bmp", "gfx/lev4.bmp", "gfx/levdoh.bmp" };
+		#endif
+		for (i = 0; i < GFX_NbBkg; i++)
+		{
+			if ((gVar.pLev[i] = SDL_LoadBMP(pBkgLevFilenames[i])) == NULL) {
+				fprintf(stderr, "Couldn't load picture '%s' : %s\n", pBkgLevFilenames[i], SDL_GetError());
+				exit(1);
+			}
 		}
-	}
-	gVar.pBackground = gVar.pBkg[0];
+		gVar.pLevel = gVar.pLev[0];
 
-	// Init sound.
-	Sfx_SoundInit();
-	Sfx_LoadWavFiles();
-	Sfx_SoundOn();	// Starts playback.
-
-	//
-	MenuInit();
-	// Lecture de la table des high-scores.
-	Scr_Load();
-
-	SDL_ShowCursor(SDL_DISABLE);	// Cache le pointeur de la souris.
-
-	// Boucle infinie.
-	nMenuVal = MENU_Main;//MENU_Game;
-	nLoop = 1;
-	while (nLoop)
-	{
-		switch (nMenuVal)
+		// Load menus backgound pictures.
+		#ifndef _WIN32
+		char	*pBkgMenFilenames[MENU_NbBkg] = {
+			BREAKER_DATADIR"/gfx/bkg1.bmp",
+			BREAKER_DATADIR"/gfx/bkg2.bmp"
+		};
+		#else
+		char	*pBkgMenFilenames[MENU_NbBkg] = { "gfx/bkg1.bmp", "gfx/bkg2.bmp" };
+		#endif
+		for (i = 0; i < MENU_NbBkg; i++)
 		{
-		case MENU_Main:		// Main menu.
-			nMenuVal = Menu(MenuMain_Init, MenuMain_Main);
-			break;
+			if ((gVar.pBkg[i] = SDL_LoadBMP(pBkgMenFilenames[i])) == NULL) {
+				fprintf(stderr, "Couldn't load picture '%s' : %s\n", pBkgMenFilenames[i], SDL_GetError());
+				exit(1);
+			}
+		}
+		gVar.pBackground = gVar.pBkg[0];
 
-		case MENU_Game:		// Jeu.
-			Game();
-			nMenuVal = MENU_Main;
-			break;
+		// Init sound.
+		Sfx_SoundInit();
+		Sfx_LoadWavFiles();
+		Sfx_SoundOn();	// Starts playback.
+
+		//
+		MenuInit();
+		// Lecture de la table des high-scores.
+		Scr_Load();
+
+		SDL_ShowCursor(SDL_DISABLE);	// Cache le pointeur de la souris.
+
+		// Boucle infinie.
+		nMenuVal = MENU_Main;//MENU_Game;
+		nLoop = 1;
+		while (nLoop)
+		{
+			switch (nMenuVal)
+			{
+			case MENU_Main:		// Main menu.
+				nMenuVal = Menu(MenuMain_Init, MenuMain_Main);
+				break;
 
-		case MENU_HallOfFame:	// High scores.
-			Menu(MenuHighScores_Init, MenuHighScores_Main);
-			nMenuVal = MENU_Main;
-			break;
+			case MENU_Game:		// Jeu.
+				Game();
+				nMenuVal = MENU_Main;
+				break;
 
-		case MENU_Quit:		// Sortie.
-			nLoop = 0;
-			break;
-		}
+			case MENU_HallOfFame:	// High scores.
+				Menu(MenuHighScores_Init, MenuHighScores_Main);
+				nMenuVal = MENU_Main;
+				break;
 
-	}
+			case MENU_Quit:		// Sortie.
+				nLoop = 0;
+				break;
+			}
 
-	SDL_ShowCursor(SDL_ENABLE);		// Réaffiche le pointeur de la souris.
+		}
 
-	Sfx_SoundOff();	// Stops playback.
-	Sfx_FreeWavFiles();	// Libère les ressources des fx.
+		SDL_ShowCursor(SDL_ENABLE);		// Réaffiche le pointeur de la souris.
 
-	// Libère les ressources des sprites.
-	SprRelease();
+		Sfx_SoundOff();	// Stops playback.
+		Sfx_FreeWavFiles();	// Libère les ressources des fx.
 
-	// Free the allocated surfaces.
-	for (i = 0; i < GFX_NbBkg; i++)
-	{
-		SDL_FreeSurface(gVar.pLev[i]);
-	}
-	for (i = 0; i < MENU_NbBkg; i++)
-	{
-		SDL_FreeSurface(gVar.pBkg[i]);
-	}
+		// Libère les ressources des sprites.
+		SprRelease();
 
-	// Libère les ressources de rendu.
-	RenderRelease();
+		// Free the allocated surfaces.
+		for (i = 0; i < GFX_NbBkg; i++)
+		{
+			SDL_FreeSurface(gVar.pLev[i]);
+		}
+		for (i = 0; i < MENU_NbBkg; i++)
+		{
+			SDL_FreeSurface(gVar.pBkg[i]);
+		}
 
+		// Libère les ressources de rendu.
+		RenderRelease();
+		
+		breaker_dir_release();
+	}
+	
 	return (0);
 }
 
diff -urN breaker3264_a2/Makefile breaker3264_b2/Makefile
--- breaker3264_a2/Makefile	2014-08-23 20:18:51.000000000 +0200
+++ breaker3264_b2/Makefile	2014-08-23 20:52:01.245977880 +0200
@@ -22,7 +22,7 @@
 
 
 TARGET = breaker 
-OBJECTS = main.o render.o anims.o sprites.o dust.o frame.o mst.o animspr.o fire.o menu.o preca.o breaker.o font.o monsters.o sfx.o 
+OBJECTS = main.o pathconfig.o render.o anims.o sprites.o dust.o frame.o mst.o animspr.o fire.o menu.o preca.o breaker.o font.o monsters.o sfx.o 
 
 CFLAGS = -O3 -Wall -I/usr/include/SDL -L/usr/lib -s -DBREAKER_DATADIR=\"$(DATADIR)\" -DNDEBUG 
 LIBS = -lSDL -lm
diff -urN breaker3264_a2/menu.c breaker3264_b2/menu.c
--- breaker3264_a2/menu.c	2013-03-06 10:11:16.000000000 +0100
+++ breaker3264_b2/menu.c	2014-08-20 18:40:51.000000000 +0200
@@ -1,6 +1,8 @@
 // Menus.
 
+#include <limits.h>
 #include "includes.h"
+#include "pathconfig.h"
 
 #define	MENU_Bkg_Mvt	1
 
@@ -356,8 +358,10 @@
 {
 	FILE	*pFile;
 	u32	nChk;
+	char	fn[PATH_MAX];
 
-	if ((pFile = fopen(HISC_Filename, "rb")) != NULL)
+	snprintf(fn, sizeof fn, "%s/%s", get_breaker_dir(),HISC_Filename);
+	if ((pFile = fopen(fn, "rb")) != NULL)
 	{
 		// Le fichier existe, lecture.
 		fread(gpHighScores, sizeof(struct SScore), HISC_Nb, pFile);
@@ -384,8 +388,10 @@
 {
 	FILE	*pFile;
 	u32	nChk;
+	char	fn[PATH_MAX];
 
-	if ((pFile = fopen(HISC_Filename, "wb")) == NULL)
+	snprintf(fn, sizeof fn, "%s/%s", get_breaker_dir(),HISC_Filename);
+	if ((pFile = fopen(fn, "wb")) == NULL)
 	{
 		printf("Unable to save highscores table\n");
 		return;
diff -urN breaker3264_a2/pathconfig.c breaker3264_b2/pathconfig.c
--- breaker3264_a2/pathconfig.c	1970-01-01 01:00:00.000000000 +0100
+++ breaker3264_b2/pathconfig.c	2014-08-25 17:48:19.598338509 +0200
@@ -0,0 +1,54 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include <limits.h>
+#include <sys/stat.h>
+#include <sys/types.h>
+#include <errno.h>
+#include <string.h>
+
+
+char *PATH_CONFIG_STRING;
+
+
+int set_breaker_dir(void)
+{
+    char *hd;
+    char breaker_dir[PATH_MAX];
+    struct stat sb;
+
+#ifndef _WIN32
+    hd = getenv("HOME");
+#else
+    hd = getenv("USERDATA");
+        if (hd==NULL)
+            hd = getenv("USERPROFILE");
+#endif
+    if (hd != NULL)
+    {
+        snprintf(breaker_dir, sizeof breaker_dir, "%s/.breaker", hd);
+        PATH_CONFIG_STRING=strdup(breaker_dir);
+	
+        if (stat(breaker_dir, &sb))
+            if (mkdir(breaker_dir, S_IRWXU) != 0)
+            {
+                fprintf(stderr, "%s could not be created.\n", breaker_dir);
+                return 0;
+            }
+    }
+    else
+    {
+        fprintf(stderr, "Failed to get environment variable HOME: %s\n", strerror(errno));
+	return 0;
+    }
+    return 1;
+}
+
+char *get_breaker_dir(void)
+{
+    return PATH_CONFIG_STRING;
+}
+
+void breaker_dir_release(void)
+{
+    free(PATH_CONFIG_STRING);
+}
diff -urN breaker3264_a2/pathconfig.h breaker3264_b2/pathconfig.h
--- breaker3264_a2/pathconfig.h	1970-01-01 01:00:00.000000000 +0100
+++ breaker3264_b2/pathconfig.h	2014-08-22 18:31:44.000000000 +0200
@@ -0,0 +1,3 @@
+int set_breaker_dir(void);
+char *get_breaker_dir(void);
+void breaker_dir_release(void);
diff -urN breaker3264_a2/render.c breaker3264_b2/render.c
--- breaker3264_a2/render.c	2012-05-30 22:52:21.000000000 +0200
+++ breaker3264_b2/render.c	2014-08-25 17:46:01.180078662 +0200
@@ -5,7 +5,7 @@
 
 #include "includes.h"
 
-#if defined (__LINUX__) || defined (__APPLE__)
+#ifndef _WIN32
 #define	BPP32_2X	1		// Useless with Windows - Vital with Linux.
 #endif
 
